/* Generated by Nimrod Compiler v0.9.6 */
/*   (c) 2014 Andreas Rumpf */
/* The generated code is subject to the original license. */
#ifndef __lazy_rest_c_api__
#define __lazy_rest_c_api__
#define NIM_INTBITS 64
#include "nimbase.h"
typedef struct NimStringDesc NimStringDesc;
typedef struct TGenericSeq TGenericSeq;
typedef struct tstringtable127812 tstringtable127812;
struct  TGenericSeq  {
NI len;
NI reserved;
};
struct  NimStringDesc  {
  TGenericSeq Sup;
NIM_CHAR data[SEQ_DECL_SIZE];
};
typedef N_NIMCALL_PTR(NimStringDesc*, lr_nim_msg_handler) (NimStringDesc* filename, NI line, NI col, NU8 msgkind, NimStringDesc* arg);
typedef N_NIMCALL_PTR(NCSTRING, lr_c_msg_handler) (NCSTRING filename, int line, int col, NIM_CHAR msgkind, NCSTRING arg);
typedef N_NIMCALL_PTR(NimStringDesc*, lr_nim_find_file_handler) (NimStringDesc* currentfilename, NimStringDesc* targetfilename);
typedef N_NIMCALL_PTR(void, lr_c_find_file_handler) (NCSTRING currentfilename, NCSTRING targetfilename, NCSTRING outpath, int maxlength);
N_NOCONV(void, signalHandler)(int sig);
N_NIMCALL(NI, getRefcount)(void* p);
N_NIMCALL(NimStringDesc*, lr_nil_msg_handler)(NimStringDesc* filename, NI line, NI col, NU8 msgkind, NimStringDesc* arg);
N_NIMCALL(NimStringDesc*, lr_nil_find_file_handler)(NimStringDesc* currentfilename, NimStringDesc* targetfilename);
N_NIMCALL(NimStringDesc*, lr_stdout_msg_handler)(NimStringDesc* filename, NI line, NI col, NU8 msgkind, NimStringDesc* arg);
N_NIMCALL(NimStringDesc*, lr_unrestricted_find_file_handler)(NimStringDesc* currentfilename, NimStringDesc* targetfilename);
N_CDECL(void, lr_version_int)(NI32* major, NI32* minor, NI32* maintenance);
N_NIMCALL(NCSTRING, lr_version_str)(void);
N_NIMCALL(tstringtable127812*, lr_parse_rst_options)(NCSTRING options);
N_NIMCALL(int, lr_set_global_rst_options)(NCSTRING options);
N_NIMCALL(void, lr_set_nim_msg_handler)(lr_nim_msg_handler func);
N_NIMCALL(void, lr_set_c_msg_handler)(lr_c_msg_handler func);
N_NIMCALL(void, lr_set_nim_find_file_handler)(lr_nim_find_file_handler func);
N_NIMCALL(void, lr_set_c_find_file_handler)(lr_c_find_file_handler func);
N_NIMCALL(int, lr_set_find_file_buffer_size)(int s);
N_NIMCALL(NCSTRING, lr_rst_string_to_html)(NCSTRING content_205785, NCSTRING filename_205786, tstringtable127812* config_205787);
N_NIMCALL(NCSTRING, lr_rst_string_to_html_error)(void);
N_NIMCALL(NCSTRING, lr_rst_file_to_html)(NCSTRING filename_205851, tstringtable127812* config_205852);
N_NIMCALL(NCSTRING, lr_rst_file_to_html_error)(void);
N_NIMCALL(NCSTRING, lr_safe_rst_string_to_html)(NCSTRING data_205915, NCSTRING filename_205916, NI32* errors, tstringtable127812* config_205919);
N_NIMCALL(NCSTRING, lr_safe_rst_string_to_html_error)(int pos);
N_NIMCALL(NCSTRING, lr_safe_rst_file_to_html)(NCSTRING filename_206040, NI32* errors, tstringtable127812* config_206043);
N_NIMCALL(NCSTRING, lr_safe_rst_file_to_html_error)(int pos);
N_NIMCALL(NCSTRING, lr_source_string_to_html)(NCSTRING content_206163, NCSTRING filename_206164, NCSTRING language_206165, int numberlines_206166, tstringtable127812* config_206167);
N_NIMCALL(NCSTRING, lr_source_file_to_html)(NCSTRING filename_206199, NCSTRING language_206200, int numberlines_206201, tstringtable127812* config_206202);
N_NIMCALL(int, lr_set_normal_error_rst)(NCSTRING inputrst_206233, tstringtable127812* config_206234);
N_NIMCALL(NCSTRING, lr_set_normal_error_rst_error)(int pos);
N_NIMCALL(int, lr_set_safe_error_rst)(NCSTRING inputrst_206308, tstringtable127812* config_206309);
N_NIMCALL(NCSTRING, lr_set_safe_error_rst_error)(int pos);
N_CDECL(void, NimMain)(void);
#endif /* __lazy_rest_c_api__ */
